{
	"info": {
		"_postman_id": "f4ca0cac-70c4-4ba6-9bcf-97f76987ff77",
		"name": "Account",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/accounts",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer Acccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/customerAccount/bobTheBuilder?name=Bobby&password=123456",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"customerAccount",
						"bobTheBuilder"
					],
					"query": [
						{
							"key": "name",
							"value": "Bobby"
						},
						{
							"key": "password",
							"value": "123456"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Employee Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Robert is an Employee now.\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.username).to.eql(\"emp\");\r",
							"  pm.expect(responseJson.name).to.eql(\"Robert\");\r",
							"  pm.expect(responseJson.role).to.contains(\"Clerk\")\r",
							"});\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/employeeAccount/emp?name=Robert&password=12345678&role=Clerk",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"employeeAccount",
						"emp"
					],
					"query": [
						{
							"key": "name",
							"value": "Robert"
						},
						{
							"key": "password",
							"value": "12345678"
						},
						{
							"key": "role",
							"value": "Clerk"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Account Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bobby changed the name on his account.\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.username).to.eql(\"bobTheBuilder\");\r",
							"  pm.expect(responseJson.name).to.eql(\"Bobito\");\r",
							"});\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/updateName/bobTheBuilder/?newName=Bobito",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"updateName",
						"bobTheBuilder",
						""
					],
					"query": [
						{
							"key": "newName",
							"value": "Bobito"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login as customer\", () => {\r",
							"  const responseJson = pm.response;\r",
							"  pm.response.body=\"true\"\r",
							"});\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/login?username=bobTheBuilder&password=123456",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": "bobTheBuilder"
						},
						{
							"key": "password",
							"value": "123456"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Customer Accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let schema={\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"array\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": [],\r",
							"    \"examples\": [\r",
							"        [\r",
							"            {\r",
							"                \"username\": \"bobTheBuilder\",\r",
							"                \"name\": \"Bobito\",\r",
							"                \"pointBalance\": 0,\r",
							"                \"role\": \"Customer\"\r",
							"            }\r",
							"        ]\r",
							"    ],\r",
							"    \"additionalItems\": true,\r",
							"    \"items\": {\r",
							"        \"$id\": \"#/items\",\r",
							"        \"anyOf\": [\r",
							"            {\r",
							"                \"$id\": \"#/items/anyOf/0\",\r",
							"                \"type\": \"object\",\r",
							"                \"title\": \"The first anyOf schema\",\r",
							"                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                \"default\": {},\r",
							"                \"examples\": [\r",
							"                    {\r",
							"                        \"username\": \"bobTheBuilder\",\r",
							"                        \"name\": \"Bobito\",\r",
							"                        \"pointBalance\": 0,\r",
							"                        \"role\": \"Customer\"\r",
							"                    }\r",
							"                ],\r",
							"                \"required\": [\r",
							"                    \"username\",\r",
							"                    \"name\",\r",
							"                    \"pointBalance\",\r",
							"                    \"role\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"username\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/username\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The username schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"bobTheBuilder\"\r",
							"                        ]\r",
							"                    },\r",
							"                    \"name\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/name\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The name schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"Bobito\"\r",
							"                        ]\r",
							"                    },\r",
							"                    \"pointBalance\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/pointBalance\",\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The pointBalance schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": 0,\r",
							"                        \"examples\": [\r",
							"                            0\r",
							"                        ]\r",
							"                    },\r",
							"                    \"role\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/role\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The role schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"Customer\"\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"additionalProperties\": true\r",
							"            }\r",
							"        ]\r",
							"    }\r",
							"}\r",
							"pm.test(\"Bobito is a registered Customer.\", function () {\r",
							" pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/customerAccounts",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"customerAccounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Employee Accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let schema={\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"array\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": [],\r",
							"    \"examples\": [\r",
							"        [\r",
							"            {\r",
							"                \"username\": \"bobTheBuilder\",\r",
							"                \"name\": \"Bobito\",\r",
							"                \"pointBalance\": 0,\r",
							"                \"role\": \"Customer\"\r",
							"            }\r",
							"        ]\r",
							"    ],\r",
							"    \"additionalItems\": true,\r",
							"    \"items\": {\r",
							"        \"$id\": \"#/items\",\r",
							"        \"anyOf\": [\r",
							"            {\r",
							"                \"$id\": \"#/items/anyOf/0\",\r",
							"                \"type\": \"object\",\r",
							"                \"title\": \"The first anyOf schema\",\r",
							"                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                \"default\": {},\r",
							"                \"examples\": [\r",
							"                    {\r",
							"                        \"username\": \"bobTheBuilder\",\r",
							"                        \"name\": \"Bobito\",\r",
							"                        \"pointBalance\": 0,\r",
							"                        \"role\": \"Customer\"\r",
							"                    }\r",
							"                ],\r",
							"                \"required\": [\r",
							"                    \"username\",\r",
							"                    \"name\",\r",
							"                    \"pointBalance\",\r",
							"                    \"role\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"username\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/username\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The username schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"bobTheBuilder\"\r",
							"                        ]\r",
							"                    },\r",
							"                    \"name\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/name\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The name schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"Bobito\"\r",
							"                        ]\r",
							"                    },\r",
							"                    \"pointBalance\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/pointBalance\",\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The pointBalance schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": 0,\r",
							"                        \"examples\": [\r",
							"                            0\r",
							"                        ]\r",
							"                    },\r",
							"                    \"role\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/role\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The role schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"Customer\"\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"additionalProperties\": true\r",
							"            }\r",
							"        ]\r",
							"    }\r",
							"}\r",
							"pm.test(\"Robert is a registered Employee.\", function () {\r",
							" pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/employeeAccounts",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"employeeAccounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let schema={\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"array\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": [],\r",
							"    \"examples\": [\r",
							"        [\r",
							"            {\r",
							"                \"username\": \"bobTheBuilder\",\r",
							"                \"name\": \"Bobito\",\r",
							"                \"pointBalance\": 0,\r",
							"                \"role\": \"Customer\"\r",
							"            }\r",
							"        ]\r",
							"    ],\r",
							"    \"additionalItems\": true,\r",
							"    \"items\": {\r",
							"        \"$id\": \"#/items\",\r",
							"        \"anyOf\": [\r",
							"            {\r",
							"                \"$id\": \"#/items/anyOf/0\",\r",
							"                \"type\": \"object\",\r",
							"                \"title\": \"The first anyOf schema\",\r",
							"                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                \"default\": {},\r",
							"                \"examples\": [\r",
							"                    {\r",
							"                        \"username\": \"bobTheBuilder\",\r",
							"                        \"name\": \"Bobito\",\r",
							"                        \"pointBalance\": 0,\r",
							"                        \"role\": \"Customer\"\r",
							"                    }\r",
							"                ],\r",
							"                \"required\": [\r",
							"                    \"username\",\r",
							"                    \"name\",\r",
							"                    \"pointBalance\",\r",
							"                    \"role\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"username\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/username\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The username schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"bobTheBuilder\"\r",
							"                        ]\r",
							"                    },\r",
							"                    \"name\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/name\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The name schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"Bobito\"\r",
							"                        ]\r",
							"                    },\r",
							"                    \"pointBalance\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/pointBalance\",\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The pointBalance schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": 0,\r",
							"                        \"examples\": [\r",
							"                            0\r",
							"                        ]\r",
							"                    },\r",
							"                    \"role\": {\r",
							"                        \"$id\": \"#/items/anyOf/0/properties/role\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The role schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"Customer\"\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"additionalProperties\": true\r",
							"            }\r",
							"        ]\r",
							"    }\r",
							"}\r",
							"pm.test(\"Bobito is a registered Customer.\", function () {\r",
							" pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/updatePassword/bobTheBuilder?oldPassword=123456&newPassword=12345678",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"updatePassword",
						"bobTheBuilder"
					],
					"query": [
						{
							"key": "oldPassword",
							"value": "123456"
						},
						{
							"key": "newPassword",
							"value": "12345678"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Customer Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body is empty\", function () {\r",
							"    responseBody.length==0;\r",
							"});\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/deleteAccount/bobTheBuilder?password=12345678",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"deleteAccount",
						"bobTheBuilder"
					],
					"query": [
						{
							"key": "password",
							"value": "12345678"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Employee Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test[\"Body is empty\"] = responseBody.length==0;\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "LocalHost:8080/deleteAccount/bobTheBuilder?password=12345678",
					"host": [
						"LocalHost"
					],
					"port": "8080",
					"path": [
						"deleteAccount",
						"bobTheBuilder"
					],
					"query": [
						{
							"key": "password",
							"value": "12345678"
						}
					]
				}
			},
			"response": []
		}
	]
}